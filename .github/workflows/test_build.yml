name: Test Build

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
        os: [windows-latest, ubuntu-latest, macos-12, macos-14]
      fail-fast: false
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@main
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        # For Github Actions
        python.exe -m pip install --upgrade pip
        pip install -U virtualenv
        virtualenv venv --clear
        venv\scripts\activate
        pip install -U -r requirements.txt
        git clone https://github.com/pyinstaller/pyinstaller --depth=1
        cd pyinstaller/bootloader
        python .\waf all --gcc
        cd ..\..\
        pip install pyinstaller/.
    - name: Package using PyInstaller
      run: |
        $Excludes = '--exclude', '_asyncio', '--exclude', '_bz2', '--exclude', '_decimal', '--exclude', '_hashlib', '--exclude', '_lzma' , '--exclude', '_multiprocessing' , '--exclude', '_overlapped', '--exclude', '_queue', '--exclude', 'lib2to3', '--exclude', 'difflib', '--exclude', 'pickle'
        $Resources = '--additional-hooks-dir', 'utils'
        $Icons= '--icon',  "src/res/riva.ico"
        venv\scripts\activate
        pyinstaller -y --clean -n "spambotcli" src/cli.py --version-file "utils/cli.txt" $Excludes $Resources $Icons --noupx
        pyinstaller -y --clean -n "spambotgui" src/gui.py --version-file "utils/gui.txt" -w $Excludes $Resources $Icons --noupx
        pyinstaller -y --clean -n "spambotcli" src/cli.py --version-file "utils/cli.txt" $Excludes $Resources $Icons --onefile --noupx
        pyinstaller -y --clean -n "spambotgui" src/gui.py --version-file "utils/gui.txt" -w $Excludes $Resources $Icons --onefile --noupx

    - name: Generate Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.python-version }}
        path: dist/
        compression-level: 9
        retention-days: 90
        if-no-files-found: error

    - name: Output artifact ID
      run: echo 'Artifact ID is ${{ steps.artifact-upload-step.outputs.artifact-id }}'
